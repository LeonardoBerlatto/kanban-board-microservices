version: '3.7'
services:
  teams-db:
    image: postgres:15.1
    container_name: teams-db
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: teams
    volumes:
      - /usr/local/var/postgres/teams:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  teams-redis-cache:
    image: redis:7.0.3
    container_name: teams-redis-cache
    restart: always
    volumes:
      - /usr/local/var/redis/teams-cache:/data
    ports:
      - "6379:6379"
    environment: 
      - REDIS_REPLICATION_MODE=master
      - REDIS_REPLICATION_MASTER_HOST=teams-redis-cache
      - REDIS_REPLICATION_MASTER_PORT=6379
      - REDIS_REPLICATION_PASSWORD=redis
  
  boards-db:
    image: mongo:6.0
    container_name: boards-db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - /usr/local/var/mongo/boards:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongo
      - MONGO_INITDB_DATABASE=boards

  boards-rabbitmq:
    image: rabbitmq:3.9.7-management-alpine
    container_name: boards-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - /usr/local/var/rabbitmq/boards:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_HIPE_COMPILE=1
      - RABBITMQ_USE_LONGNAME=true
      - RABBITMQ_NODENAME=rabbit@boards-rabbitmq

  issues-db:
    image: postgres:15.1
    container_name: issues-db
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: issues
    volumes:
      - /usr/local/var/postgres/issues:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  teams-api:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      args:
        - SERVICE_NAME=teams-api
    container_name: teams-api
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      - teams-db
      - teams-redis-cache

  issues-api:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      args:
        - SERVICE_NAME=issues-api
    container_name: issues-api
    restart: always
    ports:
      - '8081:8080'
    depends_on:
      - issues-db

  boards-api:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      args:
        - SERVICE_NAME=boards-api
    container_name: boards-api
    restart: always
    ports:
      - '8082:8080'
    depends_on:
      - boards-db
      - boards-rabbitmq